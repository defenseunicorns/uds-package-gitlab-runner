# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

# yaml-language-server: $schema=https://raw.githubusercontent.com/defenseunicorns/zarf/main/zarf.schema.json
kind: ZarfPackageConfig
metadata:
  name: gitlab-runner
  description: "UDS GitLab Runner Common Package"

components:
  - name: gitlab-runner
    description: "Deploy gitlab-runner"
    charts:
      - name: uds-gitlab-runner-config
        namespace: gitlab-runner
        version: 0.1.0
        localPath: ../chart
        valuesFiles:
          - ../values/config-values.yaml
      - name: gitlab-runner
        namespace: gitlab-runner
        url: https://charts.gitlab.io
        version: "0.79.1"
        valuesFiles:
          - ../values/common-values.yaml
    images:
      - ghcr.io/defenseunicorns/uds-package-gitlab-runner/gitlab-runner-plugins:latest
    actions:
      onCreate:
        before:
          - cmd: docker buildx build --load ../plugins -t ghcr.io/defenseunicorns/uds-package-gitlab-runner/gitlab-runner-plugins:latest --platform linux/###ZARF_PKG_ARCH###
      onDeploy:
        before:
          - cmd: |
              test -n "${ZARF_VAR_RUNNER_AUTH_TOKEN}" && echo "${ZARF_VAR_RUNNER_AUTH_TOKEN}" && exit 0 || true

              ./zarf tools kubectl wait pod --for=condition=Ready -n gitlab -l "app=webservice" > /dev/null

              RUNNER_REGISTRATION_TOKEN=$(./zarf tools kubectl get secret -n gitlab gitlab-gitlab-runner-secret -o jsonpath={.data.runner-registration-token} | base64 -d)
              WEBSERVICE_POD=$(./zarf tools kubectl get pod -n gitlab -l "app=webservice" -o json | ./zarf tools yq '[.items[] | select(.status.phase = "Running") | .metadata.name][0]')

              ./zarf tools kubectl exec -n gitlab ${WEBSERVICE_POD} -- \
                curl -s --request POST "http://gitlab-webservice-default.gitlab.svc.cluster.local:8181/api/v4/runners" \
                --form "token=${RUNNER_REGISTRATION_TOKEN}" --form "tag_list=${ZARF_VAR_RUNNER_TAGS}" \
                | ./zarf tools yq .token
            mute: true
            setVariables:
              - name: RUNNER_AUTH_TOKEN
                sensitive: true
        after:
          - description: Validate GitLab Runner Package
            maxTotalSeconds: 300
            cmd: |
              if ./zarf tools kubectl get packages.uds.dev gitlab-runner -n gitlab-runner; then
                 ./zarf tools wait-for packages.uds.dev gitlab-runner -n gitlab-runner '{.status.phase}'=Ready
              fi
          - description: Validate GitLab Runner Sandbox Package
            maxTotalSeconds: 300
            cmd: |
              if ./zarf tools kubectl get packages.uds.dev gitlab-runner-sandbox -n "$ZARF_VAR_RUNNER_SANDBOX_NAMESPACE"; then
                 ./zarf tools wait-for packages.uds.dev gitlab-runner-sandbox -n "$ZARF_VAR_RUNNER_SANDBOX_NAMESPACE" '{.status.phase}'=Ready
              fi
