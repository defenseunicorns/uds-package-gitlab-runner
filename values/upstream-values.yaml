    # networkPolicies:
    #   enabled: true
    #   additionalPolicies:
    #   # expected use case is to open egress for runner jobs
    #   # This is a dev example policy spec and CIDR 0.0.0.0/0 is unsafe for operational environments
    #   # requests to controlPlane should also be blocked in an operational policy
    #   - name: egress-runner-jobs
    #     spec:
    #       podSelector: {}
    #       policyTypes:
    #       - Egress
    #       egress:
    #       - to:
    #         - ipBlock:
    #             cidr: 0.0.0.0/0
    #             except:
    #             # Block requests to AWS cloud metadata IP
    #             - 169.254.169.254/32
    #             # Block requests to controlPlane if CIDR not 0.0.0.0/0
    #             # - "{{ $.Values.networkPolicies.controlPlaneCidr }}"


    # no longer necessary to directly pass through .Values.monitoring.enabled
    # the package chart uses: .Capabilities.APIVersions.Has "monitoring.coreos.com/v1" to toggle monitoring
    # metrics:
    #   enabled: true
    #   serviceMonitor:
    #     enabled: true

    # When istio injected, add an annotation with the istio version to the manager pods only
    # podAnnotations:
    #   bigbang.dev/istioVersion: ###ZARF_VAR_ISTIO_VERSION###

    # monitoring:
    #   enabled: true

    # autoRegister requires kyverno
    # autoRegister:
    #   enabled: ###ZARF_VAR_AUTO_REGISTER###

    unregisterRunners: true


    runners:
      config: |
        [[runners]]
          clone_url = "http://gitlab-webservice-default.gitlab.svc.cluster.local:8181"
          cache_dir = "/tmp/gitlab-runner/cache"
          [runners.kubernetes]
            namespace = "gitlab-runner-sandbox"
            image_pull_secrets = ["private-registry"]
          [runners.kubernetes.pod_labels]
            "job_id" = "${CI_JOB_ID}"
            "job_name" = "${CI_JOB_NAME}"
            "pipeline_id" = "${CI_PIPELINE_ID}"
      secret: gitlab-gitlab-runner-secret
      runUntagged: true
      protected: true
