unregisterRunners: true


# Create a non-default service account with the name gitlab-runner with minimal permissions
rbac:
  create: true
  generatedServiceAccountName: gitlab-runner
  rules:
    - apiGroups: [""]
      resources: [""]
      verbs: [""]

runners:
  secret: gitlab-gitlab-runner-secret
  runUntagged: true
  protected: true
  job:
    namespace: "###ZARF_VAR_RUNNER_SANDBOX_NAMESPACE###"
  fleeting:
    enabled: false
    maxInstances: 10
    pluginConfig: {}
    connectorConfig: {}
    policy: {}
  config: |
    [[runners]]
      url = "https://gitlab.###ZARF_VAR_DOMAIN###"
      clone_url = "https://gitlab.###ZARF_VAR_DOMAIN###"
      cache_dir = "/tmp/gitlab-runner/cache"
    {{- if .Values.runners.fleeting }}
      executor = "instance"
      [runners.autoscaler]
        plugin = "{{ printf "%s/%s:%s" .Values.runners.fleeting.registry .Values.runners.fleeting.repository .Values.runners.fleeting.tag }}"

        capacity_per_instance = 1
        max_use_count = 1
        max_instances = {{ .Values.runners.fleeting.maxInstances }}
        [runners.autoscaler.plugin_config]
          {{ toToml .Values.runners.fleeting.pluginConfig | nindent 10 }}
        [runners.autoscaler.connector_config]
          {{ toToml .Values.runners.fleeting.connectorConfig | nindent 10 }}
        [[runners.autoscaler.policy]]
          {{ toToml .Values.runners.fleeting.policy | nindent 10 }}
    {{- else }}
      [runners.kubernetes]
        namespace = "{{ printf "%s" .Values.runners.job.namespace }}"
        helper_image = "{{ printf "%s/%s:%s" .Values.runners.helper.registry .Values.runners.helper.repository .Values.runners.helper.tag }}"
        image = "{{ printf "%s/%s:%s" .Values.runners.job.registry .Values.runners.job.repository .Values.runners.job.tag }}"
        image_pull_secrets = ["private-registry"]
      [runners.kubernetes.pod_labels]
        "job_id" = "${CI_JOB_ID}"
        "job_name" = "${CI_JOB_NAME}"
        "pipeline_id" = "${CI_PIPELINE_ID}"
        "uds/user" = "${UDS_RUN_AS_USER}"
        "uds/group" = "${UDS_RUN_AS_GROUP}"
        "uds/network-access-gitlab" = "true"
      [runners.kubernetes.helper_container_security_context]
        run_as_non_root = true
        run_as_user = 1001
        run_as_group = 0
    {{- end }}

concurrent: 50

podSecurityContext:
  runAsUser: 100
  fsGroup: 65534

securityContext:
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  privileged: false
  capabilities:
    drop: ["ALL"]

service:
  enabled: true
metrics:
  enabled: true
  portName: http-metrics

resources:
  limits:
    memory: 256Mi
    cpu: 200m
  requests:
    memory: 256Mi
    cpu: 200m

volumes:
  - emptyDir: {}
    name: gitlab-runner

volumeMounts:
  - name: gitlab-runner
    mountPath: /.gitlab-runner
