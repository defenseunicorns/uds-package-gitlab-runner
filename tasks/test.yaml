tasks:
  - name: all
    description: Run all of the GitLab Runner Tests
    actions:
      - task: glr-health-check
      - task: glr-run-check
      - task: glr-remove
      - task: glr-create-runner-token
      - task: glr-backup-registration-secret
      - description: Get the current UDS Bundle name
        cmd: cat bundle/uds-bundle.yaml | yq .metadata.name
        setVariables:
          - name: BUNDLE_NAME
      - description: Get the current UDS Bundle version
        cmd: cat bundle/uds-bundle.yaml | yq .metadata.version
        setVariables:
          - name: BUNDLE_VERSION
      - description: Deploys the current GitLab runner package
        cmd: UDS_CONFIG=bundle/uds-config.yaml ./uds deploy bundle/uds-bundle-${BUNDLE_NAME}-${UDS_ARCH}-${BUNDLE_VERSION}.tar.zst --confirm --no-progress --set RUNNER_AUTH_TOKEN=${RUNNER_AUTH_TOKEN}
      - task: glr-restore-registration-secret
      - task: glr-health-check

  - name: glr-health-check
    description: Check the status of Gitlab Runner
    actions:
      - description: Check Gitlab Runner Secret
        wait:
          cluster:
            kind: Secret
            name: gitlab-gitlab-runner-secret
            namespace: gitlab-runner
      - description: Check Gitlab Runner Deployment
        wait:
          cluster:
            kind: Deployment
            name: gitlab-runner
            namespace: gitlab-runner
            condition: Available
      - description: Check GitLab Runner Logs for Successful Registration
        dir: test
        cmd: npm test -- journey/registration.test.ts

  - name: glr-run-check
    description: Check that a GitLab repository can trigger a gitlab runner to run
    actions:
      - description: Setup a repository and trigger a pipeline job
        dir: test
        cmd: npm test -- journey/pipeline-run.test.ts

  - name: glr-remove
    description: Remove the GitLab runner package
    actions:
      - description: Get the current UDS Bundle name
        cmd: cat bundle/uds-bundle.yaml | yq .metadata.name
        setVariables:
          - name: BUNDLE_NAME
      - description: Get the current UDS Bundle version
        cmd: cat bundle/uds-bundle.yaml | yq .metadata.version
        setVariables:
          - name: BUNDLE_VERSION
      - description: Removes the current GitLab runner package
        cmd: UDS_CONFIG=bundle/uds-config.yaml ./uds remove bundle/uds-bundle-${BUNDLE_NAME}-${UDS_ARCH}-${BUNDLE_VERSION}.tar.zst --confirm --no-progress

  - name: glr-create-runner-token
    description: Create a runner auth token and set the variable RUNNER_AUTH_TOKEN
    actions:
      - cmd: |
          RUNNER_REGISTRATION_TOKEN=$(./uds zarf tools kubectl get secret -n gitlab gitlab-gitlab-runner-secret -o jsonpath={.data.runner-registration-token} | base64 -d)
          WEBSERVICE_POD=$(./uds zarf tools kubectl get pod -n gitlab -l "app=webservice" -o json | ./uds zarf tools yq '[.items[] | select(.status.phase = "Running") | .metadata.name][0]')

          ./uds zarf tools kubectl exec -n gitlab ${WEBSERVICE_POD} -- \
            curl -s --request POST "http://gitlab-webservice-default.gitlab.svc.cluster.local:8181/api/v4/runners" \
            --form "token=${RUNNER_REGISTRATION_TOKEN}" --form "tag_list=uds" \
            | ./uds zarf tools yq .token
        mute: true
        setVariables:
          - name: RUNNER_AUTH_TOKEN

  - name: glr-backup-registration-secret
    description: Backup the registration secret and remove the original (to ensure it cannot be used by the package)
    actions:
      - cmd: ./uds zarf tools kubectl get secret -n gitlab gitlab-gitlab-runner-secret --export -o yaml | kubectl apply --namespace=default -f -
      - cmd: ./uds zarf tools kubectl delete secret -n gitlab gitlab-gitlab-runner-secret

  - name: glr-restore-registration-secret
    description: Restore the registration secret and remove the backup (to make it available to the package again)
    actions:
      - cmd: ./uds zarf tools kubectl get secret -n default gitlab-gitlab-runner-secret --export -o yaml | kubectl apply --namespace=gitlab -f -
      - cmd: ./uds zarf tools kubectl delete secret -n default gitlab-gitlab-runner-secret
