tasks:
  - name: health-check
    description: Check the status of Gitlab and Gitlab Runner StatefulSet
    actions:
      - description: Check Gitlab StatefulSet - Gitaly
        wait:
          cluster:
            kind: StatefulSet
            name: gitlab-gitaly
            namespace: gitlab
      - description: Check Gitlab StatefulSet - Postgresql
        wait:
          cluster:
            kind: StatefulSet
            name: gitlab-postgresql
            namespace: gitlab
      - description: Check Gitlab StatefulSet - Redis
        wait:
          cluster:
            kind: StatefulSet
            name: gitlab-redis-master
            namespace: gitlab
      - description: Check Gitlab Default Webservice Deployment
        wait:
          cluster:
            kind: Deployment
            name: gitlab-webservice-default
            namespace: gitlab
      - description: Check Gitlab Secret
        wait:
          cluster:
            kind: Secret
            name: gitlab-gitlab-runner-secret
            namespace: gitlab

      - description: Check Gitlab Runner Secret
        wait:
          cluster:
            kind: Secret
            name: gitlab-gitlab-runner-secret
            namespace: gitlab-runner
      - description: Check Gitlab Runner Deployment
        wait:
          cluster:
            kind: Deployment
            name: gitlab-runner
            namespace: gitlab-runner
      - description: Check GitLab Runner Logs for Successful Registration with Retires
        retries: 3
        cmd: |
          pod_label_selector="app=gitlab-runner"
          namespace="gitlab-runner"
          max_retries=3
          retry_count=0
          
          while [ $retry_count -lt $max_retries ]; do
            # Check if the GitLab Runner pod is registered
            if kubectl get pod -n "$namespace" -l "$pod_label_selector" -o jsonpath='{.items[0].metadata.name}' 2>/dev/null | xargs -I {} kubectl logs -n "$namespace" {} -c gitlab-runner | grep -q "Registering runner... succeeded"; then
              # successful test
              exit 0
            fi
            
            retry_count=$((retry_count + 1))
            sleep 30 # extra time for pod to stabilize 
          done
          
          # failure test
          exit 1
      - description: Check GitLab Runner Pod Health and Restarts
        cmd: |
          pod_label_selector="app=gitlab-runner"
          namespace="gitlab-runner"

          # Check if the GitLab Runner pod is unhealthy
          if kubectl get pod -n "$namespace" -l "$pod_label_selector" -o jsonpath='{.items[0].status.conditions[?(@.type=="Ready")].status}' | grep -q "False"; then
            # Pod is not healthy, exit with an error
            exit 1
          fi

          # sleep for 5 minutes
          echo "5 sleep for Pod initialization"
          sleep 300

          # Check if the GitLab Runner pod has restarted at least once in the last five minutes
          if echo "$pod_info" | awk '$2 > 0 && systime() - mktime(gsub(/[TZ]/, " ", $3)) < 300 {exit 1} END {exit 0}'; then
            # Gitlab Runner Pod has restarted and shouldn't have
            exit 1
          else
            # Gitlab Runner Pod has not restarted
            exit 0
          fi